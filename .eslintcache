[{"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\index.js":"1","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\App.js":"2","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\theme.js":"3","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Views\\Main\\index.js":"4","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\About\\index.js":"5","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Services\\index.js":"6","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\index.js":"7","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Banner\\index.js":"8","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Solutions\\index.js":"9","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Footer\\index.js":"10","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Talk\\index.js":"11","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Advantages\\index.js":"12","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Talk\\style.js":"13","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Advantages\\style.js":"14","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Layout\\SectionLayout\\index.js":"15","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\RichText\\index.js":"16","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\Navbar\\index.js":"17","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Footer\\style.js":"18","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Solutions\\style.js":"19","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Banner\\style.js":"20","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\BannerSlider\\index.js":"21","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\style.js":"22","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\RichText\\styles.js":"23","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\Paragraph\\index.js":"24","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\BannerSlider\\style.js":"25","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Hooks\\useAnimation.js":"26","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\Paragraph\\style.js":"27","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Layout\\SectionLayout\\style.js":"28","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Services\\style.js":"29","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\About\\style.js":"30","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Boxes\\index.js":"31","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Boxes\\style.js":"32"},{"size":447,"mtime":1608025957092,"results":"33","hashOfConfig":"34"},{"size":280,"mtime":1608203890893,"results":"35","hashOfConfig":"34"},{"size":734,"mtime":1608470946174,"results":"36","hashOfConfig":"34"},{"size":779,"mtime":1608561904518,"results":"37","hashOfConfig":"34"},{"size":2186,"mtime":1608660962525,"results":"38","hashOfConfig":"34"},{"size":2326,"mtime":1609751913860,"results":"39","hashOfConfig":"34"},{"size":1172,"mtime":1608566179702,"results":"40","hashOfConfig":"34"},{"size":1457,"mtime":1608659087708,"results":"41","hashOfConfig":"34"},{"size":1492,"mtime":1608627876279,"results":"42","hashOfConfig":"34"},{"size":2154,"mtime":1622046314436,"results":"43","hashOfConfig":"34"},{"size":1356,"mtime":1608659110201,"results":"44","hashOfConfig":"34"},{"size":1868,"mtime":1608659075670,"results":"45","hashOfConfig":"34"},{"size":1795,"mtime":1608625723955,"results":"46","hashOfConfig":"34"},{"size":1563,"mtime":1608625878514,"results":"47","hashOfConfig":"34"},{"size":777,"mtime":1608661498812,"results":"48","hashOfConfig":"34"},{"size":456,"mtime":1608561608004,"results":"49","hashOfConfig":"34"},{"size":531,"mtime":1608626633378,"results":"50","hashOfConfig":"34"},{"size":1686,"mtime":1622046116371,"results":"51","hashOfConfig":"34"},{"size":2303,"mtime":1608627801038,"results":"52","hashOfConfig":"34"},{"size":987,"mtime":1608491689598,"results":"53","hashOfConfig":"34"},{"size":2879,"mtime":1608648235191,"results":"54","hashOfConfig":"34"},{"size":2036,"mtime":1608626657633,"results":"55","hashOfConfig":"34"},{"size":1093,"mtime":1608562074642,"results":"56","hashOfConfig":"34"},{"size":1261,"mtime":1608403848669,"results":"57","hashOfConfig":"34"},{"size":2210,"mtime":1608402032728,"results":"58","hashOfConfig":"34"},{"size":2051,"mtime":1609751887130,"results":"59","hashOfConfig":"34"},{"size":1377,"mtime":1608648742445,"results":"60","hashOfConfig":"34"},{"size":1014,"mtime":1608626884624,"results":"61","hashOfConfig":"34"},{"size":1671,"mtime":1608627713796,"results":"62","hashOfConfig":"34"},{"size":1292,"mtime":1608662071767,"results":"63","hashOfConfig":"34"},{"size":3297,"mtime":1608659361135,"results":"64","hashOfConfig":"34"},{"size":2332,"mtime":1608652642940,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1d8ril4",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\index.js",[],["141","142"],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\App.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\theme.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Views\\Main\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\About\\index.js",["143","144","145","146"],"import RichText from \"../../Components/Common/RichText/index\";\r\nimport React, { useMemo, useEffect, useRef } from \"react\";\r\nimport SectionLayout from \"../../Layout/SectionLayout/index\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport aboutImage from \"../../Assets/about-img.png\";\r\nimport style from \"./style\";\r\nimport useAnimation from \"../../Hooks/useAnimation\";\r\n\r\nfunction Index() {\r\n  const styles = style();\r\n  const { setAnimation } = useAnimation();\r\n  const ref = useRef();\r\n  const textRef = useRef();\r\n  const isIntersecting = (val) => {\r\n    if (val) {\r\n      console.log(textRef.current);\r\n      setAnimation({\r\n        trigger: true,\r\n        settings: { type: \"smoothUp\" },\r\n        targets: [ref.current, textRef.current],\r\n      });\r\n    }\r\n  };\r\n\r\n  const settings = useMemo(\r\n    () => ({\r\n      rootClass: styles.root,\r\n      left: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        className: styles.aboutText,\r\n        alignItems: \"center\",\r\n        children: (\r\n          <div ref={textRef}>\r\n            <RichText\r\n              heading={\"We Are\"}\r\n              content=\"A highly specialized Management team with over 20 combined years of\r\n            experience in the Healthcare industry with proven ability to\r\n            optimally combine digital technology, skilled resources and\r\n            efficient business processes to implement creative as well as proven\r\n            market solutions to suit an ever-evolving market. Our forte has been\r\n            to successfully tailor our solutions to support your needs whether\r\n            it is in the space of Consulting, Product Management or Service\r\n            Delivery\"\r\n              action={\"About us\"}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      right: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        className: styles.image,\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n        children: <img ref={ref} src={aboutImage} />,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <SectionLayout triggerIntersection={isIntersecting} {...settings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Services\\index.js",["147"],"import RichText from \"../../Components/Common/RichText/index\";\r\nimport SquareBoxes from \"../../Components/Boxes/index\";\r\nimport React, { useMemo, useState, useRef } from \"react\";\r\nimport SectionLayout from \"../../Layout/SectionLayout/index\";\r\nimport { ReactComponent as Oval } from \"../../Assets/oval.svg\";\r\nimport style from \"./style\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAnimation from \"../../Hooks/useAnimation\";\r\n\r\nfunction Index() {\r\n  const styles = style();\r\n  const { setAnimation } = useAnimation();\r\n  const [boxesInView, setBoxesInView] = useState(false);\r\n  const ref = useRef();\r\n  const textRef = useRef();\r\n  const isIntersecting = (val) => {\r\n    if (val) {\r\n      setBoxesInView(true);\r\n      setAnimation({\r\n        trigger: true,\r\n        settings: { type: \"smoothUp\" },\r\n        targets: [textRef.current],\r\n      });\r\n    }\r\n  };\r\n\r\n  const settings = useMemo(\r\n    () => ({\r\n      rootClass: styles.root,\r\n      right: {\r\n        item: true,\r\n        container: true,\r\n        md: 5,\r\n        className: styles.aboutText,\r\n        alignItems: \"center\",\r\n        children: (\r\n          <>\r\n            <Box ref={textRef}>\r\n              <RichText\r\n                heading={\"Services.\"}\r\n                content=\"We offer customized digital services and scalable operational\r\n               strategies to prepare your Organization ride through the waves\r\n                of uncertainty in the form of disruptive technology and \r\n                government regulations so you can deliver accelerated \r\n                and cost-effective services for your consumers\"\r\n                action={\"Explore services\"}\r\n              />\r\n            </Box>\r\n          </>\r\n        ),\r\n      },\r\n      left: {\r\n        item: true,\r\n        container: true,\r\n        md: 7,\r\n        className: styles.image,\r\n        justify: \"flex-start\",\r\n\r\n        children: (\r\n          <Box ref={ref} className={styles.ovalAndBoxContainer} width=\"100%\">\r\n            <Oval />\r\n            <Box className={styles.boxes}>\r\n              <SquareBoxes runAnimation={boxesInView} />\r\n            </Box>\r\n          </Box>\r\n        ),\r\n      },\r\n    }),\r\n    [boxesInView]\r\n  );\r\n  return (\r\n    <>\r\n      <SectionLayout triggerIntersection={isIntersecting} {...settings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Banner\\index.js",["148"],"import React, { useMemo } from \"react\";\r\n// import { Grid } from \"@material-ui/core\";\r\nimport { ReactComponent as Illustration } from \"../../Assets/illustration.svg\";\r\nimport BannerSlider from \"../../Components/BannerSlider/index\";\r\nimport SectionLayout from \"../../Layout/SectionLayout/index\";\r\nimport style from \"./style\";\r\nconst content = [\r\n  {\r\n    h2: [\"Customized solutions\", \"to meet the needs of\", \"the changing market\"],\r\n    p: \"Revenue Cycle Managment\",\r\n  },\r\n  {\r\n    h2: [\"Scalable extended\", \"business office\", \"services\"],\r\n    p: \"Staff Augmentation\",\r\n  },\r\n  {\r\n    h2: [\"Innovative and\", \"intelligent technology\", \"solutions and services\"],\r\n    p: \"Product Managment\",\r\n  },\r\n];\r\nfunction Index() {\r\n  const styles = style();\r\n  const isIntersecting = () => {};\r\n  const settings = useMemo(\r\n    () => ({\r\n      left: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        justify: \"center\",\r\n        className: styles.illustration,\r\n        alignItems: \"center\",\r\n        children: <Illustration />,\r\n      },\r\n      right: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        className: styles.slider,\r\n        justify: \"flex-start\",\r\n        alignItems: \"center\",\r\n        children: <BannerSlider content={content} />,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <SectionLayout triggerIntersection={isIntersecting} {...settings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Solutions\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Footer\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Talk\\index.js",["149","150"],"import RichText from \"../../Components/Common/RichText/index\";\r\nimport React, { useMemo } from \"react\";\r\nimport SectionLayout from \"../../Layout/SectionLayout/index\";\r\nimport aboutImage from \"../../Assets/about-img.png\";\r\nimport { ReactComponent as Talk } from \"../../Assets/talk.svg\";\r\nimport style from \"./style\";\r\n\r\nfunction Index() {\r\n  const styles = style();\r\n  const isIntersecting = () => {};\r\n  const settings = useMemo(\r\n    () => ({\r\n      rootClass: styles.root,\r\n      right: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        className: styles.aboutText,\r\n        alignItems: \"center\",\r\n        children: (\r\n          <>\r\n            <RichText\r\n              heading={\"Talk to our experts about your requirements\"}\r\n              content=\"Contact us and know more about how our experts can help your business grow\"\r\n              action={\"Enquire Now\"}\r\n              paraStyles={styles.para}\r\n            />\r\n          </>\r\n        ),\r\n      },\r\n      left: {\r\n        item: true,\r\n        container: true,\r\n        md: 6,\r\n        className: styles.image,\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n        children: <Talk />,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <SectionLayout triggerIntersection={isIntersecting} {...settings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Advantages\\index.js",["151","152"],"import React, { useMemo } from \"react\";\r\nimport overlayImage from \"../../Assets/overlay.png\";\r\nimport SectionLayout from \"../../Layout/SectionLayout/index\";\r\nimport style from \"./style\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst list = [\r\n  \"US experienced management team\",\r\n  \"Secure work environment\",\r\n  \"Compliance driven process\",\r\n  \"Data driven quality review\",\r\n  \"Workforce management\",\r\n  \"24x7 coverage\",\r\n];\r\nfunction Index() {\r\n  const styles = style();\r\n  // const [boxesInView,setBoxesInView]=useState(false)\r\n  const isIntersecting = (inView) => {};\r\n  const settings = useMemo(\r\n    () => ({\r\n      rootClass: styles.root,\r\n      left: {\r\n        item: true,\r\n        container: true,\r\n        sm: 8,\r\n        justify: \"center\",\r\n        className: styles.pointers,\r\n        alignItems: \"center\",\r\n        children: (\r\n          <>\r\n            <div>\r\n              <h2> Zapare Advantages.</h2>\r\n              <Grid item container>\r\n                {list.map((val) => (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    style={{ paddingRight: \"15px\" }}\r\n                    alignItems=\"center\"\r\n                    sm={6}\r\n                    xs={12}\r\n                  >\r\n                    <p>{val}</p>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </div>\r\n          </>\r\n        ),\r\n      },\r\n      right: {\r\n        item: true,\r\n        container: true,\r\n        sm: 4,\r\n        className: styles.overlay,\r\n        justify: \"flex-start\",\r\n        alignItems: \"center\",\r\n        children: (\r\n          <>\r\n            <img src={overlayImage} />\r\n          </>\r\n        ),\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <SectionLayout triggerIntersection={isIntersecting} {...settings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Talk\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Advantages\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Layout\\SectionLayout\\index.js",["153"],"import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport style from \"./style\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nfunction Index({ left, right, rootClass, triggerIntersection }) {\r\n  const styles = style();\r\n  const { ref, inView, entry } = useInView({\r\n    threshold: 0.2,\r\n    triggerOnce: true,\r\n  });\r\n  useEffect(() => {\r\n    inView && triggerIntersection(inView);\r\n  }, [entry]);\r\n  return (\r\n    <>\r\n      <Grid container ref={ref} className={clsx(styles.root, rootClass)}>\r\n        <Grid {...left} className={clsx(styles.left, left.className)} />\r\n        <Grid {...right} className={clsx(styles.right, right.className)} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\RichText\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\Navbar\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Footer\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Solutions\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Banner\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\BannerSlider\\index.js",["154","155"],"import { Box } from \"@material-ui/core\";\r\nimport React, { useMemo, useState, useRef, createRef } from \"react\";\r\nimport Paragraph from \"../Common/Paragraph/index\";\r\nimport style from \"./style\";\r\nimport useAnimation from \"./../../Hooks/useAnimation\";\r\n\r\nfunction Index({ content }) {\r\n  let ref = useRef();\r\n  const [selectedSliderId, setSelectedSliderId] = useState(0);\r\n  const { setAnimation } = useAnimation();\r\n  const styles = style();\r\n  const arrowClicked = (origin, direction) => {\r\n    if (origin) {\r\n      setSelectedSliderId(origin);\r\n    } else {\r\n      let incrementFactor = selectedSliderId + 1;\r\n      let decrementFactor = selectedSliderId - 1;\r\n      if (incrementFactor >= content.length) {\r\n        incrementFactor = 0;\r\n      }\r\n      if (decrementFactor < 0) {\r\n        decrementFactor = content.length - 1;\r\n      }\r\n      direction === \"left\"\r\n        ? setSelectedSliderId(decrementFactor)\r\n        : setSelectedSliderId(incrementFactor);\r\n    }\r\n    const targetElements = Array.from(\r\n      renderedText[selectedSliderId].ref.current.children\r\n    );\r\n    setAnimation({\r\n      trigger: true,\r\n      settings: { type: \"translate\" },\r\n      targets: targetElements,\r\n    });\r\n  };\r\n  const renderedText = useMemo(\r\n    () =>\r\n      content.map((val, i) => {\r\n        return (\r\n          <div ref={ref}>\r\n            {val.h2.map((val, i) => (\r\n              <Box\r\n                component=\"h2\"\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  position: \"relative\",\r\n                  zIndex: i,\r\n                }}\r\n              >\r\n                {val}\r\n              </Box>\r\n            ))}\r\n            <Paragraph>{val.p}</Paragraph>\r\n          </div>\r\n        );\r\n      }),\r\n    [content]\r\n  );\r\n  const renderedDots = useMemo(\r\n    () =>\r\n      renderedText.map((val, i) => {\r\n        return (\r\n          <div\r\n            key={i}\r\n            className={[\r\n              styles.dot,\r\n              i === selectedSliderId ? styles.blue : styles.lightblue,\r\n            ].join(\" \")}\r\n            onClick={() => arrowClicked(i)}\r\n          ></div>\r\n        );\r\n      }),\r\n    [selectedSliderId]\r\n  );\r\n  return (\r\n    <>\r\n      <Box className={styles.root} component=\"div\">\r\n        {renderedText[selectedSliderId]}\r\n        <div className={styles.sliderNav}>\r\n          <div className={styles.dotWrapper}>{renderedDots}</div>\r\n          <div className={styles.arrows}>\r\n            <div\r\n              className={styles.arrowLeft}\r\n              onClick={() => {\r\n                arrowClicked(null, \"left\");\r\n              }}\r\n            />\r\n            <div\r\n              className={styles.arrowRight}\r\n              onClick={() => {\r\n                arrowClicked(null, \"right\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Header\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\RichText\\styles.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\Paragraph\\index.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\BannerSlider\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Hooks\\useAnimation.js",["156","157"],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction useAnimation() {\r\n  const [animation, setAnimation] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (animation.trigger) {\r\n      const { settings, targets } = animation;\r\n      switch (settings.type) {\r\n        case \"translate\":\r\n          targets.forEach((element, i) => {\r\n            element.animate(\r\n              [\r\n                {\r\n                  transform: `translateY(${100 * (targets.length - (i + 1))}%)`,\r\n                },\r\n                {\r\n                  transform: `translateY(0px)`,\r\n                },\r\n              ],\r\n              {\r\n                duration: 2400 / (i + 4),\r\n                easing: \"ease-in-out\",\r\n              }\r\n            );\r\n          });\r\n          break;\r\n        case \"pop\":\r\n          targets.forEach((element, i) => {\r\n            element.animate(\r\n              [\r\n                {\r\n                  transform: \"scale(0)\",\r\n                  opacity: 1,\r\n                },\r\n                {\r\n                  transform: `scale(1)`,\r\n                  opacity: 1,\r\n                },\r\n              ],\r\n              {\r\n                duration: 200,\r\n                delay: i * 200,\r\n                easing: \"linear\",\r\n              }\r\n            ).onfinish = () => {\r\n              element.style.opacity = 1;\r\n            };\r\n          });\r\n          break;\r\n        case \"smoothUp\":\r\n          targets.forEach((element, i) => {\r\n            element.animate(\r\n              [\r\n                {\r\n                  transform: `translateY(20%)`,\r\n                  opacity: \"0.5\",\r\n                },\r\n                {\r\n                  transform: `translateY(0px)`,\r\n                  opacity: \"1\",\r\n                },\r\n              ],\r\n              {\r\n                duration: 1000,\r\n\r\n                easing: \"ease-in-out\",\r\n              }\r\n            );\r\n          });\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [animation]);\r\n\r\n  return { setAnimation };\r\n}\r\n\r\nexport default useAnimation;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Common\\Paragraph\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Layout\\SectionLayout\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\Services\\style.js",["158"],"import { makeStyles } from \"@material-ui/core\";\r\n\r\n//const theme=useTheme()\r\nconst style = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      overflowX: \"hidden\",\r\n      [theme.breakpoints.down(\"xl\")]: {\r\n        marginTop: \"20vh\",\r\n        padding: \"2%\",\r\n      },\r\n      [theme.breakpoints.down(\"lg\")]: {\r\n        marginTop: \"45vh\",\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginTop: \"6vh\",\r\n        padding: \"5%\",\r\n      },\r\n    },\r\n    aboutText: {\r\n      zIndex: 1,\r\n      [theme.breakpoints.down(\"xl\")]: {\r\n        padding: \"5% 2% 0 5%\",\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        padding: \"5% 8%\",\r\n      },\r\n    },\r\n    ovalAndBoxContainer: {\r\n      position: \"relative\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        // display: \"flex\",\r\n        // justifyContent: \"flex-start\",\r\n      },\r\n    },\r\n    image: {\r\n      \"& svg\": {\r\n        width: \"120%\",\r\n        zIndex: \"-5\",\r\n        left: \"-20%\",\r\n        top: \"0%\",\r\n        position: \"absolute\",\r\n        height: \"100%\",\r\n        [theme.breakpoints.down(\"md\")]: {\r\n          width: \"110%\",\r\n        },\r\n        position: \"absolute\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n          top: \"5%\",\r\n          width: \"600px\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {},\r\n      },\r\n    },\r\n    boxes: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      marginLeft: \"5%\",\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        width: \"60%\",\r\n        display: \"contents\",\r\n      },\r\n    },\r\n  };\r\n});\r\nexport default style;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Sections\\About\\style.js",[],"H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Boxes\\index.js",["159","160","161","162","163"],"import { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport React, { useMemo, useRef, useEffect } from \"react\";\r\nimport useAnimation from \"../../Hooks/useAnimation\";\r\nimport style from \"./style\";\r\nimport clsx from \"clsx\";\r\nconst boxText = [\r\n  \"Revenue Cycle Management\",\r\n  \"Staff Augmentation\",\r\n  \"Payment Posting\",\r\n  \"Reason Code Mapping\",\r\n  \"Product Management\",\r\n  \"Virtual Assistant\",\r\n  \"Correspondence Management\",\r\n];\r\n\r\nfunction Index({ runAnimation }) {\r\n  const ref = useRef();\r\n\r\n  const styles = style();\r\n  const smMatch = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n  const { setAnimation } = useAnimation();\r\n  useEffect(() => {\r\n    console.log(runAnimation, \"runAnimato\");\r\n    if (runAnimation) {\r\n      animationHandler();\r\n    }\r\n  }, [runAnimation]);\r\n\r\n  const animationHandler = () => {\r\n    const targetElements = [];\r\n    const childrenArray = Array.from(ref.current.children);\r\n    childrenArray.forEach((val, i) => {\r\n      const x = Array.from(val.children);\r\n      targetElements.push(...x);\r\n    });\r\n    setAnimation({\r\n      trigger: true,\r\n      settings: { type: \"pop\" },\r\n      targets: targetElements,\r\n    });\r\n  };\r\n  const randamizeColors = () => {\r\n    const ar = [\"blue\", \"transparent\", \"yellow\", \"blueNavy\", \"white\"];\r\n    const randIndex = Math.floor(Math.random() * ar.length);\r\n    return ar[randIndex];\r\n  };\r\n  let increment = 1;\r\n  const boxLines = useMemo(() => {\r\n    const arr = [];\r\n    return boxText\r\n      .map((val, i) => {\r\n        let factor;\r\n        !smMatch ? (factor = 3) : (factor = 4);\r\n        const extraSlicer = boxText.length - i;\r\n        const slicer = (i + 1) % factor;\r\n        const arOne = [];\r\n        if (slicer === 0) {\r\n          for (let x = factor - 1; x >= 0; x--) {\r\n            arOne.push(boxText[i - x]);\r\n          }\r\n          return arOne;\r\n        } else if (extraSlicer < factor) {\r\n          if (arr.length > 0) return;\r\n          for (let x = 0; x < extraSlicer; x++) {\r\n            arr.push(boxText[i + x]);\r\n          }\r\n          return arr;\r\n        }\r\n      })\r\n      .filter((val) => !!val);\r\n  }, [smMatch]);\r\n  const renderedItems = useMemo(\r\n    () => (\r\n      <Grid style={{ display: \"contents\" }} ref={ref}>\r\n        {boxLines.map((val, i) => {\r\n          return (\r\n            <Grid\r\n              onClick={animationHandler}\r\n              item\r\n              container\r\n              className={styles.boxContainer}\r\n              sm={4}\r\n              xs={6}\r\n              style={{\r\n                paddingTop: i * 80,\r\n              }}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              {val.map((item, index) => {\r\n                increment++;\r\n                return (\r\n                  <div\r\n                    className={clsx(styles.smallBox, styles[randamizeColors()])}\r\n                  >\r\n                    <h1 style={{ marginLeft: \"80%\" }}>{item[0]}</h1>\r\n                    <p style={{ margin: \"10%\" }}>{item}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    ),\r\n    [smMatch]\r\n  );\r\n  return (\r\n    <>\r\n      <Grid container item>\r\n        {renderedItems}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\tiny-animations-zapare\\src\\Components\\Boxes\\style.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":26,"nodeType":"170","messageId":"171","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"172","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":58,"column":19,"nodeType":"175","endLine":58,"endColumn":53},{"ruleId":"176","severity":1,"message":"177","line":61,"column":5,"nodeType":"178","endLine":61,"endColumn":7,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":69,"column":5,"nodeType":"178","endLine":69,"endColumn":18,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"182","line":45,"column":5,"nodeType":"178","endLine":45,"endColumn":7,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"184","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"185","line":41,"column":5,"nodeType":"178","endLine":41,"endColumn":7,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"174","line":60,"column":13,"nodeType":"175","endLine":60,"endColumn":39},{"ruleId":"176","severity":1,"message":"187","line":65,"column":5,"nodeType":"178","endLine":65,"endColumn":7,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"189","line":14,"column":6,"nodeType":"178","endLine":14,"endColumn":13,"suggestions":"190"},{"ruleId":"168","severity":1,"message":"191","line":2,"column":44,"nodeType":"170","messageId":"171","endLine":2,"endColumn":53},{"ruleId":"176","severity":1,"message":"192","line":74,"column":5,"nodeType":"178","endLine":74,"endColumn":23,"suggestions":"193"},{"ruleId":"168","severity":1,"message":"194","line":1,"column":8,"nodeType":"170","messageId":"171","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":72,"column":9,"nodeType":"197","messageId":"198","endLine":73,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":49,"column":9,"nodeType":"201","messageId":"202","endLine":49,"endColumn":17},{"ruleId":"176","severity":1,"message":"203","line":27,"column":6,"nodeType":"178","endLine":27,"endColumn":20,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":51,"column":21,"nodeType":"207","messageId":"208","endLine":51,"endColumn":23},{"ruleId":"205","severity":1,"message":"209","line":63,"column":31,"nodeType":"210","messageId":"211","endLine":63,"endColumn":38},{"ruleId":"168","severity":1,"message":"212","line":91,"column":17,"nodeType":"170","messageId":"171","endLine":91,"endColumn":26},{"ruleId":"176","severity":1,"message":"213","line":106,"column":5,"nodeType":"178","endLine":106,"endColumn":14,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useInView' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'styles.aboutText', 'styles.image', and 'styles.root'. Either include them or remove the dependency array.","ArrayExpression",["217"],"React Hook useMemo has missing dependencies: 'styles.aboutText', 'styles.boxes', 'styles.image', 'styles.ovalAndBoxContainer', and 'styles.root'. Either include them or remove the dependency array.",["218"],"React Hook useMemo has missing dependencies: 'styles.illustration' and 'styles.slider'. Either include them or remove the dependency array.",["219"],"'aboutImage' is defined but never used.","React Hook useMemo has missing dependencies: 'styles.aboutText', 'styles.image', 'styles.para', and 'styles.root'. Either include them or remove the dependency array.",["220"],"React Hook useMemo has missing dependencies: 'styles.overlay', 'styles.pointers', and 'styles.root'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'inView' and 'triggerIntersection'. Either include them or remove the dependency array. If 'triggerIntersection' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["222"],"'createRef' is defined but never used.","React Hook useMemo has missing dependencies: 'arrowClicked', 'renderedText', 'styles.blue', 'styles.dot', and 'styles.lightblue'. Either include them or remove the dependency array.",["223"],"'React' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'animationHandler'. Either include it or remove the dependency array.",["224"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'increment' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'animationHandler', 'boxLines', 'increment', and 'styles'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [styles.aboutText, styles.image, styles.root]",{"range":"244","text":"245"},"Update the dependencies array to be: [boxesInView, styles.aboutText, styles.boxes, styles.image, styles.ovalAndBoxContainer, styles.root]",{"range":"246","text":"247"},"Update the dependencies array to be: [styles.illustration, styles.slider]",{"range":"248","text":"249"},"Update the dependencies array to be: [styles.aboutText, styles.image, styles.para, styles.root]",{"range":"250","text":"251"},"Update the dependencies array to be: [styles.overlay, styles.pointers, styles.root]",{"range":"252","text":"253"},"Update the dependencies array to be: [entry, inView, triggerIntersection]",{"range":"254","text":"255"},"Update the dependencies array to be: [arrowClicked, renderedText, selectedSliderId, styles.blue, styles.dot, styles.lightblue]",{"range":"256","text":"257"},"Update the dependencies array to be: [animationHandler, runAnimation]",{"range":"258","text":"259"},"Update the dependencies array to be: [animationHandler, boxLines, increment, styles]",{"range":"260","text":"261"},[2037,2039],"[styles.aboutText, styles.image, styles.root]",[2166,2179],"[boxesInView, styles.aboutText, styles.boxes, styles.image, styles.ovalAndBoxContainer, styles.root]",[1308,1310],"[styles.illustration, styles.slider]",[1207,1209],"[styles.aboutText, styles.image, styles.para, styles.root]",[1719,1721],"[styles.overlay, styles.pointers, styles.root]",[462,469],"[entry, inView, triggerIntersection]",[2145,2163],"[arrowClicked, renderedText, selectedSliderId, styles.blue, styles.dot, styles.lightblue]",[778,792],"[animationHandler, runAnimation]",[3148,3157],"[animationHandler, boxLines, increment, styles]"]